import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { app, database } from "../firebaseConfig";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from "firebase/firestore";

export default function Home() {
  const databaseRef = collection(database, "CRUD Data");
  const router = useRouter();

  const [name, setName] = useState("");
  const [age, setAge] = useState(null);
  const [ID, setID] = useState(null);
  const [data, setData] = useState([]);
  const [isUpdate, setIsUpdate] = useState(false);

  useEffect(() => {
    let token = sessionStorage.getItem("Token");
    if (token) {
      getData();
    }
    if (!token) {
      router.push("/register");
    }
  }, []);

  const addData = () => {
    addDoc(databaseRef, {
      name: name,
      age: Number(age),
    })
      .then((response) => {
        alert("Data Added Successfully");
        setName("");
        setAge("");
        getData();
      })
      .catch((error) => {
        alert(error.message);
      });
  };

  const getData = async () => {
    await getDocs(databaseRef).then((response) => {
      setData(
        response.docs.map((data) => {
          return { ...data.data(), id: data.id };
        })
      );
    });
  };

  const getID = (id, name, age) => {
    setIsUpdate(true);
    setName(name);
    setID(id);
    setAge(age);
  };

  const updateFields = () => {
    let fieldToEdit = doc(database, "CRUD Data", ID);
    updateDoc(fieldToEdit, {
      name: name,
      age: Number(age),
    })
      .then((response) => {
        alert("Data Updated Successfully");
        setName("");
        setAge("");
        setIsUpdate(false);
        getData();
      })
      .catch((error) => {
        alert(error.message);
      });
  };

  const deleteDocument=(id)=>{
    let fieldToEdit = doc(database, "CRUD Data", id);
    deleteDoc(fieldToEdit)
      .then(() => {
        alert("Data Deleted Successfully");
        getData();
      })
      .catch((error) => {
        alert(error.message);
      });
  }

  const logout = () => {
    sessionStorage.removeItem("Token");
    router.push("/login");
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Firebase Next</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
      <div style={{width:500,display:"flex",justifyContent:"center"}}>
        <button className={styles.button} onClick={logout}>Logout</button>
      </div>
        <h1>H0me</h1>
        <input placeholder="name" className={styles.inputBox} onChange={(event) => setName(event.target.value)} value={name} type="text" />
        <input placeholder="age" className={styles.inputBox} onChange={(event) => setAge(event.target.value)} value={age} type="number" />
        {isUpdate ? (
          <button className={styles.button} onClick={updateFields}>
            Update
          </button>
        ) : (
          <button className={styles.button} onClick={addData}>
            Add
          </button>
        )}

        <div style={{ paddingTop: 30 }}>
          {data.map((data) => {
            return (
              <div className={styles.info} key={data.id}>
                <h3>İsim: {data.name}</h3>
                <h3>Yaş: {data.age}</h3>
                <button className={styles.button} onClick={() => getID(data.id, data.name, data.age)}>
                  Update
                </button>
                <button className={styles.button} onClick={() => deleteDocument(data.id)}>
                  Delete
                </button>
              </div>
            );
          })}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
